<Window x:Class="Keypad_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Keypad_Editor"
        mc:Ignorable="d"
        MinHeight="450" MinWidth="800"
        Height="450" Width="800"
        WindowStartupLocation="CenterScreen"
        Title="Settings" Icon="Resources/Keypad.ico" PreviewKeyDown="Window_PreviewKeyDown"
        Style="{StaticResource WindowStyle}" 
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <!--// Style for text box //-->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="{StaticResource BackgroungColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="#FF202225" BorderThickness="2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="Black"/>
                                <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="Black"/>
                                <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--// Style for buttons //-->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource BackgroungColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border"  BorderThickness="2"
                                BorderBrush="#202225"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF2D2C2C" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--// Device's buttons //-->
        <Style x:Key="DeviceKey" TargetType="ToggleButton">
            <EventSetter Event="Click" Handler="Key_Click"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Margin="0.5" BorderThickness="0.5" BorderBrush="Black"
                                CornerRadius="1" x:Name="Key"
                                Background="{StaticResource DeviceButtonColor}">
                            <Border BorderThickness="0.5" BorderBrush="Black"
                                    CornerRadius="2"
                                    Padding="6" Margin="3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedDeviceButtonColor}" TargetName="Key"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--// Buttons to choose action //-->
        <Style x:Key="ActionButton" TargetType="ToggleButton">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="TimesNewRoman"/>
            <Setter Property="Background" Value="{StaticResource BackgroungColor}"/>
            <Setter Property="Foreground" Value="#989a98"/>
            <EventSetter Event="Click" Handler="ActionButton_Click"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Border"  BorderThickness="0 0 0 2"
                                BorderBrush="#202225" Padding="2"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF2D2C2C" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#202225" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--// ComboBox style //-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                      x:Name="Border" 
                      Grid.ColumnSpan="2"
                      CornerRadius="0"
                      Background="#36393f"
                      BorderBrush="#202225"
                      BorderThickness="2"/>
                <Border 
                      Grid.Column="0"
                      CornerRadius="0" 
                      Margin="1" 
                      Background="#36393f" 
                      BorderBrush="#202225"
                      BorderThickness="1"/>
                <Path 
                      x:Name="Arrow"
                      Grid.Column="1"     
                      Fill="White"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False"
                    Background="{TemplateBinding Background}"
                    Margin="2 0 0 0"/>
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Foreground" Value="#989a98"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton Name="ToggleButton"         
                                          Template="{StaticResource ComboBoxToggleButton}"             
                                          Grid.Column="2" 
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="5,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}" 
                                     Template="{StaticResource ComboBoxTextBox}" 
                                     HorizontalAlignment="Left" 
                                     VerticalAlignment="Center" 
                                     Margin="3,3,23,3"
                                     Focusable="True" 
                                     Background="#36393f"
                                     Foreground="Green"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">

                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="#36393f"
                                            BorderThickness="1"
                                            BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#989a98"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddKeyToCombination" TargetType="ToggleButton">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid>
                        <Line X1="6" Y1="0" X2="6" Y2="12" Stroke="#FF989A98" StrokeThickness="2"/>
                        <Line X1="0" Y1="6" X2="12" Y2="6" Stroke="#FF989A98" StrokeThickness="2"/>
                    </Grid>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF36393F"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderThickness="2" BorderBrush="#FF202225"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#FF989A98"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Grid>
                                            <Line X1="6" Y1="0" X2="6" Y2="12" Stroke="#FF36393F" StrokeThickness="2"/>
                                            <Line X1="0" Y1="6" X2="12" Y2="6" Stroke="#FF36393F" StrokeThickness="2"/>
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleateKeyButton" TargetType="Button"
               BasedOn="{StaticResource {x:Type Button}}">
            <EventSetter Event="Click" Handler="DeleateKeyButton_Click"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid>
                        <Line X1="0" Y1="1" X2="12" Y2="1" Stroke="#FF989A98" StrokeThickness="2"/>
                    </Grid>
                    
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF36393F"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="ToNextGroupOfCombination" TargetType="Button"
               BasedOn="{StaticResource {x:Type Button}}">
            <EventSetter Event="Click" Handler="ToNextGroupOfCombinationButton_Click"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid Width="16">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8"/>
                            <RowDefinition Height="8"/>
                        </Grid.RowDefinitions>
                        <Line X1="5" X2="12" Y1="2" Y2="8.5" 
                              StrokeThickness="2" Stroke="#FF989A98"
                              Grid.Row="0">
                        </Line>
                        <Line X1="5" X2="12" Y1="6" Y2="-0.5"
                              StrokeThickness="2" Stroke="#FF989A98"
                              Grid.Row="1">
                        </Line>
                    </Grid>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToPreviousGroupOfCombination" TargetType="Button"
               BasedOn="{StaticResource {x:Type Button}}">
            <EventSetter Event="Click" Handler="ToPreviousGroupOfCombinationButton_Click"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid Width="16">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8"/>
                            <RowDefinition Height="8"/>
                        </Grid.RowDefinitions>
                        <Line X1="11" X2="4" Y1="2" Y2="8.5" 
                              StrokeThickness="2" Stroke="#FF989A98"
                              Grid.Row="0">
                        </Line>
                        <Line X1="11" X2="4" Y1="6" Y2="-0.5"
                              StrokeThickness="2" Stroke="#FF989A98"
                              Grid.Row="1">
                        </Line>
                    </Grid>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SelectedGroupKeys" TargetType="TextBlock">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0 2 0 0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="#FF989A98"/>
        </Style>

        <Style x:Key="DeleateGroupCombnations" TargetType="Button"
               BasedOn="{StaticResource {x:Type Button}}">
            <EventSetter Event="Click" Handler="DeleateGroupCombinations_Click"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid>
                        <Line X1="0" Y1="1" X2="12" Y2="1" Stroke="#FF989A98" StrokeThickness="2"/>
                    </Grid>

                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF36393F"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="AddGroupCombimations" TargetType="Button"
               BasedOn="{StaticResource {x:Type Button}}">
            <EventSetter Event="Click" Handler="AddGroupCombinations_Click"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Grid>
                        <Line X1="6" Y1="0" X2="6" Y2="12" Stroke="#FF989A98" StrokeThickness="2"/>
                        <Line X1="0" Y1="6" X2="12" Y2="6" Stroke="#FF989A98" StrokeThickness="2"/>
                    </Grid>
                </Setter.Value>
            </Setter>
        </Style>

        <!--// Style for tips //-->
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="{StaticResource BackgroungColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TopPanelColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Resources>
            <Storyboard x:Key="SwitchOffGrid">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="1.0" To="0.0"
                                 Duration="0:0:0.5" />
            </Storyboard>
            <Storyboard x:Key="SwitchOnGrid">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="0.0" To="1.0"
                                 Duration="0:0:0.5" />
            </Storyboard>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="25px"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <!--// Top menu //-->
        <Grid Background="#202225" Grid.Row="0"
              x:Name="TopMenu" MouseDown="TopMenu_MouseDown">
            <Button Style="{StaticResource CloseButton}" Click="Close_Click"
                    HorizontalAlignment="Right"/>

            <TextBlock  Name="TitleText" Text="Settings" HorizontalAlignment="Left"
                        VerticalAlignment="Center" FontSize="15px"
                        Margin="2" Foreground="{StaticResource TextColor}"/>
        </Grid>

        <!--// Settings window //-->
        <Grid x:Name="MainWindowGrid" Grid.Row="2"
              Opacity="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MinWidth="266"/>
                <ColumnDefinition Width ="Auto"/>
                <ColumnDefinition Width="0.5*" MinWidth="133"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1.5*" MinWidth="380"/>
            </Grid.ColumnDefinitions>

            <GridSplitter Grid.Row="1" Grid.Column="1"
                          ShowsPreview="False" Width="3"
                          HorizontalAlignment="Center"
                          Background="#202225"/>
            <GridSplitter Grid.Column="3"
                          ShowsPreview="False" Width="3"
                          HorizontalAlignment="Center"
                          Background="#202225"/>

            <Button x:Name="ToCurrentSettings"
                    Grid.Column="0" VerticalAlignment="Top"
                    HorizontalAlignment="Right"
                    Height="25" Width="130" Margin="5"
                    Content="To current settings"
                    Click="ToCurrentSettings_Click"/>

            <Button x:Name="Apply" Click="Apply_Click"
                    Visibility="Hidden"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Grid.Column="4"
                    Width="100px" Height="25"
                    Margin="10" Content="Apply"/>

            <TextBlock x:Name="ErrorTextBlock" Grid.Column="0" 
                       Height="20" VerticalAlignment="Bottom"
                       Margin="5" Foreground="#FFA57171" FontSize="15"/>

            <!--// Left menu (with device) //-->
            <Viewbox Stretch="Uniform" Margin="4 30"
                     MaxWidth="330">
                <Border BorderBrush="Black" BorderThickness="0.5"
                        CornerRadius="2" Background="#FF4C4C4C">
                    <Grid x:Name="RadioButtonsOfDevice" Margin="0.5">
                        <!--// Keypad device //-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <RadioButton Grid.Column="0" Grid.Row="0"
                                     GroupName="Device" Tag="1"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="0"
                                     GroupName="Device" Tag="2"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="0"
                                     GroupName="Device" Tag="3"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="0"
                                     GroupName="Device" Tag="4"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="1"
                                     GroupName="Device" Tag="5"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="1"
                                     GroupName="Device" Tag="6"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="1"
                                     GroupName="Device" Tag="7"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="1"
                                     GroupName="Device" Tag="8"
                                     Style="{StaticResource DeviceKey}"/>
                        <!--// Numpad device //-->
                        <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <RadioButton Grid.Column="0" Grid.Row="0"
                                     GroupName="Device" Tag="0"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="0"
                                     GroupName="Device" Tag="1"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="0"
                                     GroupName="Device" Tag="2"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="0"
                                     GroupName="Device" Tag="3"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="1"
                                     GroupName="Device" Tag="4"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="1"
                                     GroupName="Device" Tag="5"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="1"
                                     GroupName="Device" Tag="6"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="1"
                                     GroupName="Device" Tag="7"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="2"
                                     GroupName="Device" Tag="8"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="2"
                                     GroupName="Device" Tag="9"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="2"
                                     GroupName="Device" Tag="10"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="2"
                                     GroupName="Device" Tag="11" Grid.RowSpan="2"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="3"
                                     GroupName="Device" Tag="12"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="3"
                                     GroupName="Device" Tag="13"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="3"
                                     GroupName="Device" Tag="14"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="4"
                                     GroupName="Device" Tag="15"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="4"
                                     GroupName="Device" Tag="16"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="4"
                                     GroupName="Device" Tag="17"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="3" Grid.Row="4"
                                     GroupName="Device" Tag="18" Grid.RowSpan="2"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="0" Grid.Row="5"
                                     GroupName="Device" Tag="19"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="1" Grid.Row="5"
                                     GroupName="Device" Tag="20"
                                     Style="{StaticResource DeviceKey}"/>
                        <RadioButton Grid.Column="2" Grid.Row="5"
                                     GroupName="Device" Tag="21"
                                     Style="{StaticResource DeviceKey}"/>-->
                    </Grid>
                </Border>
            </Viewbox>

            <!--// Actions selection menu //-->
            <StackPanel Orientation="Vertical" Grid.Column="2" 
                        x:Name="ActionsMenu">

                <RadioButton Name="open" Content="Opening" 
                             Style="{StaticResource ActionButton}"
                             GroupName="Action"/>
                <RadioButton Name="type" Content="Typing"
                             Style="{StaticResource ActionButton}"
                             GroupName="Action"/>
                <RadioButton Name="pressCombination" Content="Combination" 
                             Style="{StaticResource ActionButton}"
                             GroupName="Action"/>
            </StackPanel>

            <!--// Grids for actions //-->
            <Grid x:Name="OpenGrid" Visibility="Hidden"
                  Grid.Column="4">

                <Grid.RowDefinitions>
                    <RowDefinition Height="35px"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBox x:Name="PathToFileOrWebsite"
                         Grid.Row="0"
                         Margin="5"/>

                <Button x:Name="selectDirectory" Content="Select directory"
                        Click="SelectDirectory_Click"
                        Grid.Row="1"
                        Height="25px" Width="100px"
                        Margin="10" HorizontalAlignment="Right"
                        VerticalAlignment="Top"/>
            </Grid>
            
            <Grid x:Name="TypeGrid" Visibility="Hidden"
                  Grid.Column="4">
                <StackPanel Orientation="Vertical">
                    <TextBlock x:Name="TipTypingGrid"
                               Text="Write the text to device write it"
                               FontSize="15" Foreground="#989a98"
                               Margin="5" Height="20"/>
                    <TextBox x:Name="TextToType"  Margin="5"/>
                </StackPanel>
            </Grid>

            <Grid x:Name="CombinationGrid" Visibility="Hidden"
                  Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!--// Tip 1 //-->
                <TextBlock x:Name="CombinationTip1" Grid.ColumnSpan="3" Margin="5 4" Foreground="#FF989A98"
                           FontSize="16" Text="Setting up a combination"/>
                <!--// "Record key" button //-->
                <ToggleButton x:Name="AddKeyToCombination" Grid.Row="1"
                              Style="{StaticResource AddKeyToCombination}"
                              ToolTip="Record key for combination"/>
                <!--// Deleate last key in combination button //-->
                <Button x:Name="DeleateKeyButton" Grid.Column="1" Grid.Row="1"
                        Style="{StaticResource DeleateKeyButton}"
                        ToolTip="Deleate key from combination"/>
                <!--// Keys for combination //-->
                <Border Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="3"
                        BorderBrush="#FF202225"
                        BorderThickness="2" Margin="5">
                    <TextBlock Name="KeysTextBlock" Foreground="#989a98" Padding="2 0"/>
                </Border>
                <!--// Tip 2 //-->
                <TextBlock x:Name="CombinationTip2" Grid.Row="2" Grid.ColumnSpan="3" Margin="5 4" Foreground="#FF989A98"
                           FontSize="16" Text="Setting up a group of combination"/>
                <!--// To the previous group of combination //-->
                <Button x:Name="ToPreviousGroupOfCombination"
                        Grid.Column="2" Grid.Row="3"
                        Margin="5" Height="20"
                        VerticalAlignment="Top" HorizontalAlignment="Right"
                        Style="{StaticResource ToPreviousGroupOfCombination}"
                        ToolTip="To the previous group of combination"/>
                <!--// To the next group of combination //-->
                <Button x:Name="ToNextGroupOfCombination"
                        Grid.Row="3" Grid.Column="4" Margin="5"
                        Height="20" Width="20"
                        VerticalAlignment="Top" HorizontalAlignment="Left"
                        Style="{StaticResource ToNextGroupOfCombination}"
                        ToolTip="To the next group of combination"/>
                <!--// Number of group //-->
                <Border Grid.Row="3" Grid.Column="3" VerticalAlignment="Top" Margin="5"
                        Height="20" BorderThickness="0 0 0 2" BorderBrush="#FF202225">
                    <TextBlock Style="{StaticResource SelectedGroupKeys}"
                               Text="1" Name="NumberOfGroupTextBlock"/>
                </Border>
                <!--// Delay text box //-->
                <TextBox Name="DelayTextBlock" Grid.Row="3" Grid.Column="2"
                         Margin="5 5 35 5" Height="20" 
                         VerticalAlignment="Top" IsEnabled="False"
                         ToolTip="Delay after pressing a key combination"
                         PreviewTextInput="DelayTextBlock_PreviewTextInput"/>

                <Button x:Name="DeleateGroupCombnations"
                        Grid.Column="1" Grid.Row="3"
                        Height="20" VerticalAlignment="Top"
                        Style="{StaticResource DeleateGroupCombnations}"
                        IsEnabled="False" 
                        ToolTip="Deleate this group of combination"/>

                <Button x:Name="AddGroupCombimations"
                        Grid.Column="0" Grid.Row="3" Height="20" VerticalAlignment="Top"
                        Style="{StaticResource AddGroupCombimations}"
                        ToolTip="Add new group of combination"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
